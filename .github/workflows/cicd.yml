name: ci/cd

on:
  pull_request:
    branches: [ deploy-to-ec2 ]

jobs:
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Unit Tests with Maven
        run: mvn test -Punit-test
  build:
    name: Build
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Set SHORT_SHA environment variable
        run: echo "SHORT_SHA=$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7)" >> $GITHUB_ENV
      - name: Build with Maven
        run: mvn clean install -DskipTests
      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build docker image
        run: docker build -t  ${{ secrets.USERNAME }}/webclient-factory:${{ env.SHORT_SHA }} .
      - name: Push docker image
        run: docker push ${{ secrets.USERNAME }}/webclient-factory:${{ env.SHORT_SHA }}
  integration-test:
    name: Integration Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Integration Tests with Maven
        run: mvn test -Pintegration-test
  deploy:
    name: Deploy
    needs: integration-test
    runs-on: [aws-ec2-sandbox]
    steps:
      - name: Set SHORT_SHA environment variable
        run: echo "SHORT_SHA=$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7)" >> $GITHUB_ENV
      - name: Pull the latest image from DockerHub
        run: docker pull ${{ secrets.USERNAME }}/webclient-factory:${{ env.SHORT_SHA }}
      - name: Run the container
        run: docker run -d -p 8080:8080 --name webclient-${{ env.SHORT_SHA }} ${{ secrets.USERNAME }}/webclient-factory:${{ env.SHORT_SHA }}